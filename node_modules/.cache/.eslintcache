[{"/Users/htc/Desktop/Redux/Fatima Munwwar test /my-app/src/index.js":"1","/Users/htc/Desktop/Redux/Fatima Munwwar test /my-app/src/reportWebVitals.js":"2","/Users/htc/Desktop/Redux/Fatima Munwwar test /my-app/src/App.js":"3","/Users/htc/Desktop/Redux/Fatima Munwwar test /my-app/src/Component/Nabvar.js":"4","/Users/htc/Desktop/Redux/Fatima Munwwar test /my-app/src/Store/Store.js":"5","/Users/htc/Desktop/Redux/Fatima Munwwar test /my-app/src/Store/VisibilitySlice.js":"6","/Users/htc/Desktop/Redux/Fatima Munwwar test /my-app/src/Store/ProductSlice.js":"7","/Users/htc/Desktop/Redux/Fatima Munwwar test /my-app/src/Store/FavouriteSlice.js":"8","/Users/htc/Desktop/Redux/Fatima Munwwar test /my-app/src/Component/Home.js":"9","/Users/htc/Desktop/Redux/Fatima Munwwar test /my-app/src/Component/Data.js":"10","/Users/htc/Desktop/Redux/Fatima Munwwar test /my-app/src/Component/Product.js":"11","/Users/htc/Desktop/Redux/Fatima Munwwar test /my-app/src/Component/Cart.js":"12"},{"size":800,"mtime":1699858407671,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1698911830397,"results":"15","hashOfConfig":"14"},{"size":620,"mtime":1699855714354,"results":"16","hashOfConfig":"14"},{"size":5311,"mtime":1700196003491,"results":"17","hashOfConfig":"14"},{"size":729,"mtime":1700196168274,"results":"18","hashOfConfig":"14"},{"size":433,"mtime":1699338736278,"results":"19","hashOfConfig":"14"},{"size":819,"mtime":1699338719662,"results":"20","hashOfConfig":"14"},{"size":824,"mtime":1699421441875,"results":"21","hashOfConfig":"14"},{"size":5545,"mtime":1700126149326,"results":"22","hashOfConfig":"14"},{"size":2124,"mtime":1699422622969,"results":"23","hashOfConfig":"14"},{"size":2443,"mtime":1699422513038,"results":"24","hashOfConfig":"14"},{"size":6348,"mtime":1699423476572,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1tragkp",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"29"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"29"},"/Users/htc/Desktop/Redux/Fatima Munwwar test /my-app/src/index.js",[],[],["66"],"/Users/htc/Desktop/Redux/Fatima Munwwar test /my-app/src/reportWebVitals.js",[],[],["67"],"/Users/htc/Desktop/Redux/Fatima Munwwar test /my-app/src/App.js",[],[],"/Users/htc/Desktop/Redux/Fatima Munwwar test /my-app/src/Component/Nabvar.js",[],[],"/Users/htc/Desktop/Redux/Fatima Munwwar test /my-app/src/Store/Store.js",[],[],"/Users/htc/Desktop/Redux/Fatima Munwwar test /my-app/src/Store/VisibilitySlice.js",[],[],"/Users/htc/Desktop/Redux/Fatima Munwwar test /my-app/src/Store/ProductSlice.js",[],[],"/Users/htc/Desktop/Redux/Fatima Munwwar test /my-app/src/Store/FavouriteSlice.js",[],[],"/Users/htc/Desktop/Redux/Fatima Munwwar test /my-app/src/Component/Home.js",[],[],"/Users/htc/Desktop/Redux/Fatima Munwwar test /my-app/src/Component/Data.js",[],[],"/Users/htc/Desktop/Redux/Fatima Munwwar test /my-app/src/Component/Product.js",["68"],[],"import React from \"react\";\nimport { data } from \"./Data\";\nimport \"./product.css\";\nimport { useDispatch } from \"react-redux\";\nimport { addToCart, addAllItem } from \"../Store/ProductSlice\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Product = () => {\n  const dispatch = useDispatch();\n\n  const add = (item) => {\n    dispatch(addToCart(item));\n  };\n\n  const addAllToCart = () => {\n    const allItems = data.map((value) => {\n      return dispatch(addAllItem(value));\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"container m-auto mt-5\">\n        <div className=\"flex justify-between items-center mb-7\">\n          <div>\n            <h1>Total Products (10)</h1>\n          </div>\n          <div className=\"\">\n            <button className=\"border px-7 py-3\" onClick={addAllToCart}>\n              Move All To Cart\n            </button>\n          </div>\n        </div>\n        <div className=\"row flex flex-wrap\">\n          {data.map((item, index) => (\n            <div className=\"item mt-7\" key={index}>\n              <div className=\"border rounded h-64 w-70 bg-stone-200\">\n                <div className=\"flex justify-between\">\n                  <div className=\"flex me-3 mt-1  px-3\">\n                    {item.discountInPercentage > 0 ? (\n                      <p className=\"bg-red-600 px-2 pt-1 rounded mt-2 text-white\">\n                        {item.discountInPercentage} %\n                      </p>\n                    ) : null}\n                  </div>\n                </div>\n\n                <div className=\"items-center flex justify-center mt-3\">\n                  <img src={item.image} alt={item.title} />\n                </div>\n              </div>\n\n              <div className=\"flex border rounded bg-black py-2 items-center justify-center\">\n                <FontAwesomeIcon\n                  className=\"ms-3 ps-3 pr-3 text-white\"\n                  icon={faShoppingCart}\n                />\n                <button onClick={() => add(item)} className=\"text-white \">\n                  Add to cart\n                </button>\n              </div>\n\n              <h1 className=\"pt-2\">{item.title}</h1>\n              <div className=\"flex pt-1\">\n                <p className=\"text-red-700\">${item.newPrice}</p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Product;\n","/Users/htc/Desktop/Redux/Fatima Munwwar test /my-app/src/Component/Cart.js",["69"],[],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { remove, clear } from \"../Store/ProductSlice\";\nimport jsPDF from \"jspdf\";\nimport { Link } from \"react-router-dom\";\nimport \"./product.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faX } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Cart = () => {\n  const [hovered, setHovered] = useState(null);\n  const dispatch = useDispatch();\n  const items = useSelector((state) => state.product.products);\n  const [quantity, setquantity] = useState(items.map(() => 1));\n\n  const handleHover = (item) => {\n    setHovered(item);\n  };\n  const leaveMouse = () => {\n    setHovered(null);\n  };\n\n  if (!items || items.length === 0) {\n    return (\n      <h1 className=\"font-bold text-5xl text-slate-400 flex item-center justify-center \">\n        no products left\n      </h1>\n    );\n  }\n\n  const deleteItem = (item) => {\n    dispatch(remove(item.title));\n  };\n\n  const removeAll = () => {\n    dispatch(clear());\n  };\n  const genernatePDF = () => {\n    const doc = new jsPDF();\n\n    doc.text(10, 10, \"Receipt\");\n\n    doc.text(10, 30, `Subtotal: ${valueCart}`);\n\n    doc.text(10, 40, \"Shipping: free\");\n    doc.text(10, 50, `Cart Total: ${valueCart}`);\n\n    doc.save(\"receipt.pdf\");\n  };\n\n  const allSubTotal = () => {\n    const totalCart = items.reduce((acc, item, index) => {\n      const subtotal = item.newPrice * quantity[index];\n      return acc + subtotal;\n    }, 0);\n\n    return totalCart;\n  };\n\n  const valueCart = allSubTotal();\n\n  return (\n    <div className=\"container m-auto\">\n      <div className=\"flex ps-2 pb-7 pt-7\">\n        <Link to=\"/Home\">\n          <h1>Home</h1>\n        </Link>\n        <p className=\"ps-1\">/</p>\n        <h1 className=\"ps-2\">Cart</h1>\n      </div>\n      <div className=\"  mt-5 \">\n        <table className=\"w-full text-sm text-left   \">\n          <thead className=\"text-xs  uppercase    \">\n            <div className=\" border shadow-md\">\n              <tr className=\" flex justify-between width my-3 py-2\">\n                <th scope=\"col\" className=\"px-6\">\n                  Product\n                </th>\n                <th scope=\"col\" className=\"px-7 padding-left  \">\n                  Price\n                </th>\n                <th scope=\"col\" className=\"px-6 \">\n                  Quantity\n                </th>\n                <th scope=\"col\" className=\"px-6 \">\n                  Subtotal\n                </th>\n              </tr>\n            </div>\n          </thead>\n\n          <tbody className=\"\">\n            {items.map((item, index) => (\n              <div className=\"border  shadow-md mb-4 mt-3 \">\n                <tr\n                  key={index}\n                  className=\"bg-white width-one flex justify-between \"\n                >\n                  <td\n                    className=\"  relative flex items-center font-size \"\n                    onMouseEnter={() => handleHover(item)}\n                    onMouseLeave={leaveMouse}\n                  >\n                    <img\n                      src={item.image}\n                      alt=\"Product Image\"\n                      height={50}\n                      width={50}\n                    />\n\n                    {hovered === item && (\n                      <button\n                        className=\"cross-icon\"\n                        onClick={() => deleteItem(item)}\n                      >\n                        <FontAwesomeIcon\n                          icon={faX}\n                          className=\"rounded-full border bg-red-600 px-1 py-1 text-white\"\n                        />\n                      </button>\n                    )}\n                    <h1 className=\"text-2xl ps-4\"> {item.title}</h1>\n                  </td>\n\n                  <td className=\" py-4 font-semibold text-gray-900  \">\n                    ${item.newPrice}\n                  </td>\n                  <td className=\" py-4\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div>\n                        <input\n                          type=\"number\"\n                          id=\"first_product\"\n                          className=\"w-14 border border-gray-300 text-sm block px-2.5 py-1\"\n                          placeholder=\"1\"\n                          value={quantity[index]}\n                          required\n                          onChange={(e) => {\n                            const newquantity = [...quantity];\n                            newquantity[index] = parseInt(e.target.value);\n                            setquantity(newquantity);\n                          }}\n                        />\n                      </div>\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 text-gray-900\">\n                    {item.newPrice * quantity[index]}\n                  </td>\n                </tr>\n              </div>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      <div className=\"flex justify-between mt-3 \">\n        <Link to=\"/product\">\n          <button className=\"border px-3 py-3\">Return to product</button>\n        </Link>\n        <button onClick={removeAll} className=\"border px-4\">\n          Remove All\n        </button>\n      </div>\n      <div className=\"border mt-5 h-64 w-96 flex items-center ps-5 mb-6 border-black \">\n        <div>\n          <div>\n            <div>\n              <h1 className=\"pt-5\">Cart Total</h1>\n              <div className=\"flex border-b-2 pb-2 pt-4 justify-between\">\n                <h1>Sub Total</h1>\n                <h1>$ {valueCart}</h1>\n              </div>\n              <div className=\"flex border-b-2 pb-2 justify-between pt-2\">\n                <p>Shipping</p>\n                <p className=\"padding  ps-5\"> Free</p>\n              </div>\n              <div className=\"flex justify-between pt-1\">\n                <p>Total:</p>\n                <p>$ {valueCart}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"flex justify-center items-center mt-5 text-white \">\n            <button\n              className=\"border px-3 py-3   bg-red-600\"\n              onClick={genernatePDF}\n            >\n              Download Receipt\n            </button>\n          </div>\n        </div>\n      </div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Cart;\n",{"ruleId":"70","replacedBy":"71"},{"ruleId":"70","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":18,"column":11,"nodeType":"75","messageId":"76","endLine":18,"endColumn":19},{"ruleId":"77","severity":1,"message":"78","line":104,"column":21,"nodeType":"79","endLine":109,"endColumn":23},"no-new-object",["80"],["80"],"no-unused-vars","'allItems' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-object-constructor"]